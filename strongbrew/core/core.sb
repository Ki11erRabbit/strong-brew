module strongbrew::core::core;

//pub extern "Java" fn while(cond: fn () (), body: fn () ()) = "while (cond.run()) { body.run(); }";

//pub extern "Java" fn I64::for(start: i64, end: i64, body: fn () (i64)) = "for (int i = start; i < end; i++) { body.run(i); }";

pub extern "Java" fn print(string: String) = "
    java.lang.System.out.print(string);
"
pub extern "Java" fn println(string: String) = "
    java.lang.System.out.println(string);
"

pub extern "Java" fn I8::show(n: i8) -> String = "
    return Byte.toString(n);
"

pub extern "Java" fn I16::show(n: i16) -> String = "
    return Short.toString(n);
"

pub extern "Java" fn I32::show(n: i32) -> String = "
    return Integer.toString(n);
"

pub extern "Java" fn I64::show(n: i64) -> String = "
    return Long.toString(n);
"

pub extern "Java" fn Natural::show(n: nat) -> String = "
    return n.toString();
"

pub extern "Java" fn Int::show(n: int) -> String = "
    return n.toString();
"
